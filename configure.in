AC_INIT

AC_ARG_WITH(python, AC_HELP_STRING([--with-python=NAME],
            [name of the python executable [[python]]]),
            [PYTHON="$with_python"])

if test -z "${PYTHON}"; then
    AC_PATH_PROGS(PYTHON, python, [python],
                  [$PATH:/usr/local/bin])
fi

AC_SUBST(PYTHON)

AC_ARG_WITH(python, AC_HELP_STRING([--with-virtualenv=NAME],
            [name of the virtualenv executable [[virtualenv]]]),
            [VIRTUALENV="$with_virtualenv"])

if test -z "${VIRTUALENV}"; then
    AC_PATH_PROGS(VIRTUALENV, virtualenv, [virtualenv],
                  [`dirname $PYTHON`:$PATH:/usr/local/bin])
fi

AC_SUBST(VIRTUALENV)

if test -z "${GIT}"; then
    AC_PATH_PROGS(GIT, git, [git],
                  [$PATH:/usr/local/bin:/usr/local/git/bin])
fi

AC_SUBST(GIT)

AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug],
            [enable internal agent debugging]),
            [ENABLE_AGENT_DEBUG=$enableval],
            [ENABLE_AGENT_DEBUG=no])

AC_SUBST(ENABLE_AGENT_DEBUG)

AC_CANONICAL_HOST

AC_CHECK_FUNC(backtrace_symbols_fd, [AC_DEFINE(HAVE_STACK_BACKTRACE, 1, [Whether you can do a backtrace])])

AC_CHECK_HEADERS(malloc.h malloc/malloc.h sys/resource.h)
AC_CHECK_FUNCS(mstats getrusage getpagesize)

if test -f /proc/self/statm ; then
  AC_DEFINE(HAVE_PROC_SELF_STATM, 1, [Whether you have /proc/self/statm])
fi

case "$host" in
  *linux*)    AC_DEFINE(NR_LINUX_SAMPLER, 1, [Linux-based usage sampler])
              AC_DEFINE(NRTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_ERRORCHECK_NP, [How to get error checking mutexes])
              PLATFORM="LINUX"
              ;;
  *darwin*)   AC_DEFINE(NR_DARWIN_SAMPLER, 1, [Darwin-based usage sampler])
              AC_DEFINE(NRTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_ERRORCHECK, [How to get error checking mutexes])
              PLATFORM="DARWIN"
              ;;
  *solaris*)  AC_DEFINE(NR_SOLARIS_SAMPLER, 1, [Solaris-based usage sampler])
              AC_DEFINE(NRTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_ERRORCHECK, [How to get error checking mutexes])
              PLATFORM="SOLARIS"
              ;;
  *freebsd*)  AC_DEFINE(NR_FREEBSD_SAMPLER, 1, [FreeBSD-based usage sampler])
              AC_DEFINE(NRTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_ERRORCHECK, [How to get error checking mutexes])
              PLATFORM="FREEBSD"
              ;;
esac

AC_SUBST(PLATFORM)

AC_CONFIG_HEADER(config.h)

AC_OUTPUT(Makefile setup.py)
