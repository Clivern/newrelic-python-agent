[tox]
setupdir = {toxinidir}/../..
envlist =
    {py27,py34,py35,py36}-grpc{0103,0104}-protobuf{cpp,python}-{with,without}-extensions,
    {py27,py34,py35,py36,py37}-grpclatest-protobuf{cpp,python}-{with,without}-extensions,

[jenkins]
mostrecent = grpclatest

[pytest]
usefixtures = session_initialization requires_data_collector gc_garbage_empty

[testenv]
deps =
    grpc0103: grpcio-tools<1.4
    grpc0103: grpcio<1.4
    grpc0104: grpcio-tools<1.5
    grpc0104: grpcio<1.5
    grpclatest: grpcio
    grpclatest: grpcio-tools
setenv =
    PYTHONPATH={toxinidir}/..:{toxinidir}/sample_application
    TOX_ENVDIR = {envdir}
    without-extensions: NEW_RELIC_EXTENSIONS = false
    with-extensions: NEW_RELIC_EXTENSIONS = true
    protobufpython: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION = python
    # NOTE: tests in this env will fail if there is no C++ runtime
    protobufcpp: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION = cpp

commands =
    python -m grpc_tools.protoc \
        -I{toxinidir}/sample_application \
        --python_out={toxinidir}/sample_application \
        --grpc_python_out={toxinidir}/sample_application \
        {toxinidir}/sample_application/sample_application.proto
    py.test -v []

install_command=
    pip install -r {toxinidir}/../base_requirements.txt {opts} {packages}

