syntax = "proto3";

service SampleApplication {
    rpc DoUnaryUnary(Message) returns (Message) {}
    rpc DoUnaryStream(Message) returns (stream Message) {}
    rpc DoStreamUnary(stream Message) returns (Message) {}
    rpc DoStreamStream(stream Message) returns (stream Message) {}

    rpc DtUnaryUnary(Message) returns (Message) {}
    rpc DtUnaryStream(Message) returns (stream Message) {}
    rpc DtStreamUnary(stream Message) returns (Message) {}
    rpc DtStreamStream(stream Message) returns (stream Message) {}

    rpc DoUnaryUnaryRaises(Message) returns (Message) {}
    rpc DoUnaryStreamRaises(Message) returns (stream Message) {}
    rpc DoStreamUnaryRaises(stream Message) returns (Message) {}
    rpc DoStreamStreamRaises(stream Message) returns (stream Message) {}

    rpc NoTxnUnaryUnaryRaises(Message) returns (Message) {}
    rpc NoTxnUnaryStreamRaises(Message) returns (stream Message) {}
    rpc NoTxnStreamUnaryRaises(stream Message) returns (Message) {}
    rpc NoTxnStreamStreamRaises(stream Message) returns (stream Message) {}

    rpc NoTxnUnaryUnary(Message) returns (Message) {}
    rpc NoTxnUnaryStream(Message) returns (stream Message) {}
    rpc NoTxnStreamUnary(stream Message) returns (Message) {}
    rpc NoTxnStreamStream(stream Message) returns (stream Message) {}
}

message Message {
    string text = 1;
    int32 count = 2;
    bool timesout = 3;
}
